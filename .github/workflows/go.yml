# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version-file: go.mod 

  # ---- Lint (golangci-lint) ----
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest

    # ---- Format check (golines) ----
    - name: Install golines
      run: go install github.com/segmentio/golines@latest

    - name: Run golines check
      run: |
        golines -m 100 --base-formatter gofmt ./...
        git diff --exit-code || (echo "‚ùå Code is not formatted with golines" && exit 1)

    - name: Test coverages
      run: go test ./... -coverprofile=coverage.out -coverpkg=./...
  
    - name: Check test coverage
      uses: vladopajic/go-test-coverage@v2
      with:
        profile: coverage.out
        threshold-total: 90
        git-token: ${{ github.ref_name == 'main' && secrets.GITHUB_TOKEN || '' }}
        git-branch: badges 